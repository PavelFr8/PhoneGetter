let t, b, w, bGen;
let sec = 0;
let bat = 50;
let p = document.getElementById("player");
let pY = window.innerHeight / 2 - 25;
let ws = [];
let bs = [];
let paused = false;
let name = "";

function toggleButton() {
    const n = document.getElementById('playerName').value.trim();
    document.getElementById('startButton').disabled = n === "";
}

function startGame() {
    name = document.getElementById('playerName').value.trim();
    if (name) {
        localStorage.setItem('name', name);
        document.getElementById('playerDisplay').innerText = name;
        document.getElementById('welcomeScreen').style.display = 'none';
        document.getElementById('gameScreen').style.display = 'block';
        document.getElementById('gameOverScreen').style.display = 'none';
        resetGame();
        startTimer();
        startBatteryDrain();
        startWallGen();
        startBatteryGen();
    }
}

function resetGame() {
    sec = 0;
    bat = 50;
    ws.forEach(wall => wall.remove());
    bs.forEach(bat => bat.remove());
    ws = [];
    bs = [];
    document.getElementById('timer').innerText = "00:00";
    document.getElementById('battery').innerText = "50%";
}

function startTimer() {
    t = setInterval(() => {
        if (!paused) {
            sec++;
            const min = Math.floor(sec / 60).toString().padStart(2, '0');
            const s = (sec % 60).toString().padStart(2, '0');
            document.getElementById('timer').innerText = `${min}:${s}`;
        }
    }, 1000);
}

function startBatteryDrain() {
    b = setInterval(() => {
        if (!paused && bat > 0) {
            bat--;
            document.getElementById('battery').innerText = `${bat}%`;
        } else if (bat === 0) {
            endGame("Game Over! Battery drained.");
        }
    }, 1000);
}

function startWallGen() {
    w = setInterval(() => {
        if (!paused) {
            createWall();
        }
    }, 3000);
}

function createWall() {
    const wallHeight = Math.floor(Math.random() * 401) + 100;
    const wallPos = Math.random() > 0.5 ? "top" : "bottom";
    const wall = document.createElement('div');
    wall.className = "wall";
    wall.style.height = `${wallHeight}px`;
    wall.style[wallPos] = 0;
    wall.style.left = `${window.innerWidth}px`;

    document.body.appendChild(wall);
    ws.push(wall);
    moveWall(wall);
}

function moveWall(wall) {
    let wallPos = window.innerWidth;
    const move = setInterval(() => {
        if (!paused) {
            wallPos -= 5;
            wall.style.left = `${wallPos}px`;
            if (wallPos <= -50) {
                clearInterval(move);
                wall.remove();
                ws = ws.filter(w => w !== wall);
            }

            if (isCollision(p, wall)) {
                endGame("You hit a wall!");
            }
        }
    }, 20);
}

function startBatteryGen() {
    bGen = setInterval(() => {
        if (!paused) {
            createBattery();
        }
    }, 3000);
}

function createBattery() {
    const batSize = 30;
    const batHeight = 30;
    const batX = window.innerWidth;
    const batY = Math.random() * (window.innerHeight - batHeight);

    const battery = document.createElement('div');
    battery.className = "battery";
    battery.style.left = `${batX}px`;
    battery.style.top = `${batY}px`;

    document.body.appendChild(battery);
    bs.push(battery);
    moveBattery(battery);
}

function moveBattery(battery) {
    let batteryPos = window.innerWidth;
    const move = setInterval(() => {
        if (!paused) {
            batteryPos -= 5;
            battery.style.left = `${batteryPos}px`;

            if (batteryPos <= -50) {
                clearInterval(move);
                battery.remove();
                bs = bs.filter(b => b !== battery);
            }

            if (isCollision(p, battery)) {
                bat += 5;
                if (bat > 100) bat = 100;
                document.getElementById('battery').innerText = `${bat}%`;
                battery.remove();
                bs = bs.filter(b => b !== battery);
            }
        }
    }, 20);
}

function isCollision(player, object) {
    const pRect = player.getBoundingClientRect();
    const objRect = object.getBoundingClientRect();

    return !(pRect.right < objRect.left ||
                pRect.left > objRect.right ||
                pRect.bottom < objRect.top ||
                pRect.top > objRect.bottom);
}

function endGame(message) {
    clearInterval(t);
    clearInterval(b);
    clearInterval(w);
    clearInterval(bGen);
    document.getElementById('finalTime').innerText = document.getElementById('timer').innerText;
    document.getElementById('gameOverScreen').style.display = 'block';
    document.getElementById('gameScreen').style.display = 'none';
}

function restartGame() {
    resetGame();
    startGame();
}

document.addEventListener("keydown", (event) => {
    if (event.key === "Escape") {
        if (paused) {
            startTimer();
            startBatteryDrain();
            startWallGen();
            startBatteryGen();
            paused = false;
        } else {
            clearInterval(t);
            clearInterval(b);
            clearInterval(w);
            clearInterval(bGen);
            paused = true;
        }
    }

    if (!paused) {
        if (event.key === "w" && pY > 0) {
            pY -= 20;
        } else if (event.key === "s" && pY < window.innerHeight - 50) {
            pY += 20;
        }
        p.style.top = pY + "px";
    }
});

---

<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="style.css">
    <title>Исследователь</title>
</head>
<body>
    <div class="welcome" id="welcomeScreen">
        <h1>Добро пожаловать в "Исследователь"</h1>
        <p>Введите имя:</p>
        <input type="text" id="playerName" placeholder="Ваше имя" oninput="toggleButton()">
        <button id="startButton" onclick="startGame()" disabled>Старт</button>
    </div>

    <div class="game" id="gameScreen">
        <h1>Игровое поле</h1>
        <p>Игрок: <span id="playerDisplay"></span></p>
        <p>Время: <span id="timer">00:00</span></p>
        <p>Заряд батареи: <span id="battery">50%</span></p>
        <div class="player" id="player"></div>
    </div>

    <div class="game-over" id="gameOverScreen">
        <p>Игра окончена! Ваше время: <span id="finalTime">00:00</span></p>
        <button onclick="restartGame()">Рестарт</button>
    </div>

    <script src="script.js"></script>
</body>
</html>
</body>

body {
    margin: 0;
    overflow: hidden;
    font-family: Arial, sans-serif;
    color: white;
    background: black;
}
.welcome {
    text-align: center;
    opacity: 1;
}
.game {
    display: none;
    position: relative;
    width: 100vw;
    height: 100vh;
    background: url('background.jpg') repeat-x;
    background-size: cover;
    animation: moveBackground 10s linear infinite;
}
@keyframes moveBackground {
    from { background-position: 0 0; }
    to { background-position: -200vw 0; }
}
.player {
    position: absolute;
    left: 20px;
    top: 50%;
    width: 50px;
    height: 50px;
    background: red;
    transform: translateY(-50%);
}
.wall {
    position: absolute;
    width: 50px;
    background: #654321;
}
.battery {
    position: absolute;
    width: 30px;
    height: 30px;
    background: yellow;
    border-radius: 50%;
}
.game-over {
    display: none;
    text-align: center;
    font-size: 2em;
}
.game-over button {
    padding: 10px;
    font-size: 1.5em;
}